name: Rebuild Posts Index

on:
  push:                # fire on every push…
  workflow_dispatch:   # …and on the “Run workflow” button

permissions:
  contents: write

jobs:
  regen:
    runs-on: ubuntu-latest
    # only on manual runs OR pushes to the default branch
    if: ${{ github.event_name == 'workflow_dispatch' ||
            github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Regenerate posts.json
        run: |
          node -e "
            const fs = require('fs'),
                  path = require('path'),
                  matter = require('gray-matter');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const ref           = process.env.GITHUB_REF_NAME; // branch name
            const postsDir      = path.join(process.cwd(),'content','posts');
            const folders = fs.readdirSync(postsDir)
              .filter(d => fs.statSync(path.join(postsDir,d)).isDirectory())
              .sort((a, b) => b.localeCompare(a)); // newest‑first by ISO name
            const arr = folders.map(folder => {
              const md   = fs.readFileSync(path.join(postsDir,folder,'index.md'),'utf8');
              const { data } = matter(md);
              const rawBase   = `https://raw.githubusercontent.com/${owner}/${repo}/${ref}/content/posts/${folder}`;
              return {
                title: data.title,
                featuredImage: `${rawBase}/${data.featuredImage.replace(/^\.\//,'')}`,
                slug: folder.split('-').slice(2).join('-'),
                subject: data.subject,
                githubPath: rawBase
              };
            });
            fs.writeFileSync('content/posts.json', JSON.stringify(arr, null, 2)+'\n');
          "

      - name: Commit & Push Index
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add content/posts.json
          git commit -m "chore: regenerate posts.json"
          git push